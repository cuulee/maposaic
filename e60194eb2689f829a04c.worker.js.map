{"version":3,"sources":["../webpack/bootstrap","Mapozaic/paint.worker.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","getPointFromPixelIndex","pixelIndex","webglWidth","x","y","Math","floor","getMapboxPixelIndexFromPoint","point","isColorSimilar","color1","color2","similarColorTolerance","abs","g","b","createRGB","paintAdjacentPointsInData","maposaicData","mapboxPixels","initialPoint","initialColor","targetColor","visitedPixelSet","viewportHeight","viewportWidth","toVisitPointStack","pop","has","paintPoint","color","add","mosaicPixel","getMosaicPixelIndexFromPoint","pointColor","adjacentPoints","S","E","O","N","getAdjacentPoints","values","filter","adjacentPoint","length","colorRatio","forEach","push","onmessage","data","webglHeight","roadColorThreshold","Set","j","random","postMessage"],"mappings":"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","file":"e60194eb2689f829a04c.worker.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/maposaic/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","import { imagePoint, RGBColor } from './Mapozaic'\n\nconst getPointFromPixelIndex = (pixelIndex: number, webglWidth: number): imagePoint => {\n  return { x: (pixelIndex / 4) % webglWidth, y: Math.floor(pixelIndex / 4 / webglWidth) }\n}\nconst getMapboxPixelIndexFromPoint = (point: imagePoint, webglWidth: number): number => {\n  return (point.y * webglWidth + point.x) * 4\n}\nconst getMosaicPixelIndexFromPoint = (point: imagePoint, viewportWidth: number, viewportHeight: number): number => {\n  return ((viewportHeight - point.y - 1) * viewportWidth + point.x) * 4\n}\n\nconst isColorSimilar = (color1: RGBColor, color2: RGBColor, similarColorTolerance: number): boolean => {\n  return (\n    Math.abs(color1.r - color2.r) < similarColorTolerance &&\n    Math.abs(color1.g - color2.g) < similarColorTolerance &&\n    Math.abs(color1.b - color2.b) < similarColorTolerance\n  )\n}\n\nconst createRGB = (r: number, g: number, b: number): RGBColor => {\n  return { r, g, b }\n}\n\nconst getAdjacentPoints = ({\n  point,\n  viewportWidth,\n  viewportHeight,\n}: {\n  point: imagePoint\n  viewportWidth: number\n  viewportHeight: number\n}) => ({\n  S: point.y < viewportHeight - 1 ? { x: point.x, y: point.y + 1 } : null,\n  E: point.x < viewportWidth - 1 ? { x: point.x + 1, y: point.y } : null,\n  O: point.x > 0 ? { x: point.x - 1, y: point.y } : null,\n  N: point.y > 0 ? { x: point.x, y: point.y - 1 } : null,\n  // NE: point.y > 0 && point.x < viewportWidth - 1 ? { x: point.x + 1, y: point.y - 1 } : null,\n  // NO: point.y > 0 && point.x > 0 ? { x: point.x - 1, y: point.y - 1 } : null,\n  // SE: point.y < viewportHeight - 1 && point.x < viewportWidth - 1 ? { x: point.x + 1, y: point.y + 1 } : null,\n  // SO: point.y < viewportHeight - 1 && point.x > 0 ? { x: point.x - 1, y: point.y + 1 } : null,\n})\n\nconst paintAdjacentPointsInData = ({\n  maposaicData,\n  mapboxPixels,\n  initialPoint,\n  initialColor,\n  targetColor,\n  visitedPixelSet,\n  webglWidth,\n  viewportHeight,\n  viewportWidth,\n  similarColorTolerance,\n}: {\n  maposaicData: Uint8ClampedArray\n  mapboxPixels: Uint8Array\n  initialPoint: imagePoint\n  initialColor: RGBColor\n  targetColor: RGBColor\n  visitedPixelSet: Set<number>\n  webglWidth: number\n  webglHeight: number\n  viewportHeight: number\n  viewportWidth: number\n  similarColorTolerance: number\n}): void => {\n  const toVisitPointStack: imagePoint[] = [initialPoint]\n\n  while (toVisitPointStack.length > 0) {\n    const point = toVisitPointStack.pop()\n    if (!point) {\n      continue\n    }\n    const pixelIndex = getMapboxPixelIndexFromPoint(point, webglWidth)\n    if (visitedPixelSet.has(pixelIndex)) {\n      continue\n    }\n    const paintPoint = (color: RGBColor) => {\n      visitedPixelSet.add(pixelIndex)\n      const mosaicPixel = getMosaicPixelIndexFromPoint(point, viewportWidth, viewportHeight)\n      maposaicData[mosaicPixel] = color.r\n      maposaicData[mosaicPixel + 1] = color.g\n      maposaicData[mosaicPixel + 2] = color.b\n      maposaicData[mosaicPixel + 3] = 255\n    }\n\n    const pointColor = createRGB(mapboxPixels[pixelIndex], mapboxPixels[pixelIndex + 1], mapboxPixels[pixelIndex + 2])\n\n    const adjacentPoints = getAdjacentPoints({ point, viewportHeight, viewportWidth })\n    if (!isColorSimilar(pointColor, initialColor, similarColorTolerance)) {\n      const similarPointCount = Object.values(adjacentPoints).filter((adjacentPoint) => {\n        return (\n          !!adjacentPoint &&\n          !visitedPixelSet.has(getMapboxPixelIndexFromPoint(adjacentPoint, webglWidth)) &&\n          isColorSimilar(\n            createRGB(\n              mapboxPixels[getMapboxPixelIndexFromPoint(adjacentPoint, webglWidth)],\n              mapboxPixels[getMapboxPixelIndexFromPoint(adjacentPoint, webglWidth) + 1],\n              mapboxPixels[getMapboxPixelIndexFromPoint(adjacentPoint, webglWidth) + 2],\n            ),\n            pointColor,\n            similarColorTolerance,\n          )\n        )\n      }).length\n\n      if (similarPointCount < 2) {\n        const colorRatio = initialColor.r ? pointColor.r / initialColor.r : 1\n        const antiAliasingColor = createRGB(\n          targetColor.r * colorRatio,\n          targetColor.g * colorRatio,\n          targetColor.b * colorRatio,\n        )\n        paintPoint(antiAliasingColor)\n      }\n      continue\n    }\n\n    paintPoint(targetColor)\n\n    Object.values(adjacentPoints).forEach((adjacentPoint) => {\n      if (adjacentPoint && !visitedPixelSet.has(getMapboxPixelIndexFromPoint(adjacentPoint, webglWidth))) {\n        toVisitPointStack.push(adjacentPoint)\n      }\n    })\n  }\n}\n// eslint-disable-next-line\nonmessage = ({\n  data: {\n    mapboxPixels,\n    maposaicData,\n    webglWidth,\n    webglHeight,\n    viewportWidth,\n    viewportHeight,\n    roadColorThreshold,\n    similarColorTolerance,\n  },\n}: {\n  data: {\n    mapboxPixels: Uint8Array\n    maposaicData: Uint8ClampedArray\n    webglWidth: number\n    webglHeight: number\n    viewportWidth: number\n    viewportHeight: number\n    roadColorThreshold: number\n    similarColorTolerance: number\n  }\n}): void => {\n  const visitedPixelSet = new Set<number>()\n\n  let pixelIndex = 0\n\n  for (let i = 0; i < viewportHeight; i += 1) {\n    pixelIndex = i * webglWidth * 4\n\n    for (let j = 0; j < viewportWidth; j += 1) {\n      if (j > 0) {\n        pixelIndex += 4\n      }\n      if (visitedPixelSet.has(pixelIndex)) {\n        continue\n      }\n\n      const initialColor = createRGB(\n        mapboxPixels[pixelIndex],\n        mapboxPixels[pixelIndex + 1],\n        mapboxPixels[pixelIndex + 2],\n      )\n      const targetColor: RGBColor =\n        mapboxPixels[pixelIndex] < roadColorThreshold\n          ? createRGB(Math.floor(Math.random() * 256), Math.floor(Math.random() * 256), Math.floor(Math.random() * 256))\n          : createRGB(255, 255, 255)\n\n      const initialPoint = getPointFromPixelIndex(pixelIndex, webglWidth)\n      paintAdjacentPointsInData({\n        maposaicData,\n        mapboxPixels,\n        initialPoint,\n        initialColor,\n        targetColor,\n        visitedPixelSet,\n        webglWidth,\n        webglHeight,\n        viewportHeight,\n        viewportWidth,\n        similarColorTolerance,\n      })\n    }\n  }\n\n  // eslint-disable-next-line\n  // @ts-ignore\n  postMessage(maposaicData)\n}\n"],"sourceRoot":""}